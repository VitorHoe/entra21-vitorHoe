{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vitor.souza2\\\\Desktop\\\\entra21-vitorHoe\\\\Aula 61\\\\react-navigation\\\\screens\\\\DrawerScreens\\\\UseReducerScreen.js\";\nimport React, { useReducer } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { UseReducerScreen } from \"../StackScreens/UseReducerScreen\";\nexport default function reduceUser() {\n  var _useReducer = useReducer(reducer, {\n    first: '',\n    last: ''\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      fontSize: 32\n    },\n    placeholder: \"First\",\n    value: state.first,\n    onChangeText: function onChangeText(text) {\n      dispatch({\n        type: 'first',\n        value: text\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      fontSize: 32\n    },\n    placeholder: \"Last\",\n    value: state.last,\n    onChangeText: function onChangeText(text) {\n      dispatch({\n        type: 'last',\n        value: text\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Hello \", state.first, \" \", state.last));\n}","map":{"version":3,"sources":["C:/Users/vitor.souza2/Desktop/entra21-vitorHoe/Aula 61/react-navigation/screens/DrawerScreens/UseReducerScreen.js"],"names":["React","useReducer","UseReducerScreen","reduceUser","reducer","first","last","state","dispatch","fontSize","text","type","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAEA,SAASC,gBAAT;AAGA,eAAe,SAASC,UAAT,GAAsB;AACjC,oBAA0BF,UAAU,CAACG,OAAD,EAAU;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAV,CAApC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACF,KAHf;AAIE,IAAA,YAAY,EAAE,sBAACK,IAAD,EAAU;AACtBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAEF;AAAxB,OAAD,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACD,IAHf;AAIE,IAAA,YAAY,EAAE,sBAACI,IAAD,EAAU;AACtBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAEF;AAAvB,OAAD,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSF,KAAK,CAACF,KADf,OACuBE,KAAK,CAACD,IAD7B,CAjBF,CADF;AAuBD","sourcesContent":["import React, { useReducer } from 'react'\r\nimport { Text, View, TextInput } from \"react-native\";\r\nimport { UseReducerScreen } from '../StackScreens/UseReducerScreen';\r\n\r\n\r\nexport default function reduceUser() {\r\n    const [state, dispatch] = useReducer(reducer, { first: '', last: '' })\r\n  \r\n    return (\r\n      <View>\r\n        <TextInput\r\n          style={{ fontSize: 32 }}\r\n          placeholder=\"First\"\r\n          value={state.first}\r\n          onChangeText={(text) => {\r\n            dispatch({ type: 'first', value: text })\r\n          }}\r\n        />\r\n        <TextInput\r\n          style={{ fontSize: 32 }}\r\n          placeholder=\"Last\"\r\n          value={state.last}\r\n          onChangeText={(text) => {\r\n            dispatch({ type: 'last', value: text })\r\n          }}\r\n        />\r\n        <Text style={{ fontSize: 32 }}>\r\n          Hello {state.first} {state.last}\r\n        </Text>\r\n      </View>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}